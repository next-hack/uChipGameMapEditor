/*
*  uChip Game Map Editor. A simple editor and integrated utility for tile-based games.
*
*  Copyright 2019-2020 Nicola Wrachien (next-hack.com)
*
*  This file is part of uChip Simple VGA Console Kernel Library.
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program  is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
*  tl;dr
*  Do whatever you want, this program is free! Though we won't
*  reject donations https://next-hack.com/index.php/donate/ :)
*
*/
package uchipgamemapeditor;

public class ExportSpriteToCFileDialog extends javax.swing.JDialog
{
    public static final int MODE_16BPP = 0;
    public static final int MODE_USVC_8BPP = 1;
    public static final int MODE_USVC_4BPPC = 2;
    boolean confirmed = false;
    /**
     * Creates new form ExportSpriteToCFileDialog
     */
    public ExportSpriteToCFileDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton16bpp = new javax.swing.JRadioButton();
        jRadioButtonUSVC8bpp = new javax.swing.JRadioButton();
        jRadioButtonUSVC4bppC = new javax.swing.JRadioButton();
        jButtonOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Sprites to C file");

        buttonGroup1.add(jRadioButton16bpp);
        jRadioButton16bpp.setText("16 bpp sprites");

        buttonGroup1.add(jRadioButtonUSVC8bpp);
        jRadioButtonUSVC8bpp.setText("8 bpp sprites (USVC tile mode 1)");

        buttonGroup1.add(jRadioButtonUSVC4bppC);
        jRadioButtonUSVC4bppC.setSelected(true);
        jRadioButtonUSVC4bppC.setText("4 bpp (USVC tile mode 2), with odd-position copy*");

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonOkActionPerformed(evt);
            }
        });

        jLabel1.setText("* a second frame will be created, with a one pixel offset, for faster operations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton16bpp)
                    .addComponent(jRadioButtonUSVC8bpp)
                    .addComponent(jRadioButtonUSVC4bppC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jRadioButton16bpp)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonUSVC8bpp)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonUSVC4bppC)
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(jButtonOk)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonOkActionPerformed
    {//GEN-HEADEREND:event_jButtonOkActionPerformed
        confirmed = true;
        dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed
    public int getExportMode()
    {
        if (jRadioButton16bpp.isSelected())
            return MODE_16BPP;
        else if (jRadioButtonUSVC8bpp.isSelected())
            return MODE_USVC_8BPP;
        else
            return MODE_USVC_4BPPC;            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton16bpp;
    private javax.swing.JRadioButton jRadioButtonUSVC4bppC;
    private javax.swing.JRadioButton jRadioButtonUSVC8bpp;
    // End of variables declaration//GEN-END:variables
}
